/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.HeadlessException;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BorrowerISBN;
import model.Borrowers;
import model.Title;
import service.Database;

/**
 *
 * @author ashif
 */
public class ReturnFrame extends javax.swing.JFrame {

    private final Database database;
//    private final String ISBN;
    private final Map<String, Title> titles;
    private final Map<String, Borrowers> borrowers;
    private final List<BorrowerISBN> borrowerISBNs;
    private final Map<String, List<String>> titleBorrowersMap;
    private final DefaultTableModel defaultTableModelStudentInfo;
    private final DefaultTableModel defaultTableModelReturnBooks;
    private String borrowerId;

    /**
     * Creates new form PersueFrame
     *
     * @param database
     * @param titles
     * @param borrowers
     * @param borrowerISBNs
     * @param titleBorrowersMap
     */
    public ReturnFrame(Database database, Map<String, Title> titles,
            Map<String, Borrowers> borrowers, List<BorrowerISBN> borrowerISBNs,
            Map<String, List<String>> titleBorrowersMap) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        this.initComponents();
        this.hidingInformationPanel(true);
        this.database = database;
//        this.ISBN = ISBN;
        this.titles = titles;
        this.borrowers = borrowers;
        this.borrowerISBNs = borrowerISBNs;
        this.titleBorrowersMap = titleBorrowersMap;

        this.defaultTableModelStudentInfo = (DefaultTableModel) this.tblStudentInfo.getModel();
        this.defaultTableModelReturnBooks = (DefaultTableModel) this.tblReturnBooks.getModel();
    }

    private void hidingInformationPanel(boolean hide) {

        try {

            this.pReturnBooksPanel.setVisible(!hide);
            this.pStudentInfoPanel.setVisible(!hide);
        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, e);
        }
    }

    private void clearTables() {

        try {

            for (int i = this.defaultTableModelStudentInfo.getRowCount() - 1; i >= 0; i--) {

                this.defaultTableModelStudentInfo.removeRow(i);
            }

            for (int i = this.defaultTableModelReturnBooks.getRowCount() - 1; i >= 0; i--) {

                this.defaultTableModelReturnBooks.removeRow(i);
            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfStudentID = new javax.swing.JTextField();
        bCheckAvailable = new javax.swing.JButton();
        pStudentInfoPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentInfo = new javax.swing.JTable();
        pReturnBooksPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblReturnBooks = new javax.swing.JTable();
        bFinalizeReturn = new javax.swing.JButton();
        bCancelReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pursue");
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        jLabel2.setText("Student ID: ");

        tfStudentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfStudentIDActionPerformed(evt);
            }
        });

        bCheckAvailable.setText("Check");
        bCheckAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCheckAvailableActionPerformed(evt);
            }
        });

        tblStudentInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Department"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStudentInfo);

        javax.swing.GroupLayout pStudentInfoPanelLayout = new javax.swing.GroupLayout(pStudentInfoPanel);
        pStudentInfoPanel.setLayout(pStudentInfoPanelLayout);
        pStudentInfoPanelLayout.setHorizontalGroup(
            pStudentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pStudentInfoPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pStudentInfoPanelLayout.setVerticalGroup(
            pStudentInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pStudentInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        jLabel1.setText("Book to Return");

        tblReturnBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "ISBN", "Pursue", "Return"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblReturnBooks);

        javax.swing.GroupLayout pReturnBooksPanelLayout = new javax.swing.GroupLayout(pReturnBooksPanel);
        pReturnBooksPanel.setLayout(pReturnBooksPanelLayout);
        pReturnBooksPanelLayout.setHorizontalGroup(
            pReturnBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pReturnBooksPanelLayout.createSequentialGroup()
                .addGroup(pReturnBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pReturnBooksPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pReturnBooksPanelLayout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pReturnBooksPanelLayout.setVerticalGroup(
            pReturnBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pReturnBooksPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bFinalizeReturn.setText("Return");
        bFinalizeReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFinalizeReturnActionPerformed(evt);
            }
        });

        bCancelReturn.setText("Cancel");
        bCancelReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pReturnBooksPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pStudentInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bCheckAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bCancelReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bFinalizeReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bCancelReturn, bFinalizeReturn});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(bCheckAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pStudentInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pReturnBooksPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bFinalizeReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCancelReturn)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bCancelReturn, bFinalizeReturn});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfStudentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfStudentIDActionPerformed
        // TODO: Ashik vai, write manupulation code for Student ID textfield
    }//GEN-LAST:event_tfStudentIDActionPerformed

    private void bCancelReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelReturnActionPerformed

        this.dispose();
    }//GEN-LAST:event_bCancelReturnActionPerformed

    private void bFinalizeReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFinalizeReturnActionPerformed

        try {

            if (this.borrowerId == null || !this.borrowers.containsKey(borrowerId)) {

                JOptionPane.showMessageDialog(this, "Invalid ID detected!");
            } else {

                int index = this.tblReturnBooks.getSelectedRow();

                if (index >= 0) {

                    BorrowerISBN borrowerISBN = new BorrowerISBN(Integer.parseInt(this.borrowerId), (String) this.defaultTableModelReturnBooks.getValueAt(index, 1));

                    if (this.database.deleteBorrowerISBN(borrowerISBN)) {

                        this.borrowerISBNs.remove(borrowerISBN);
                        this.titleBorrowersMap.get(borrowerISBN.getISBN()).remove(this.borrowerId);
                        JOptionPane.showMessageDialog(this, "Successfully Returned!");
                        this.bCheckAvailableActionPerformed(evt);
                    }
                } else {

                    JOptionPane.showMessageDialog(this, "Please select a book first then try again.");
                }
            }
        } catch (HeadlessException e) {

            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_bFinalizeReturnActionPerformed

    private void bCheckAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCheckAvailableActionPerformed

        try {

            this.borrowerId = this.tfStudentID.getText();

            this.clearTables();

            if (this.borrowers.containsKey(borrowerId)) {

                Borrowers borrower = this.borrowers.get(borrowerId);

                this.defaultTableModelStudentInfo.addRow(new Object[]{
                    borrower.getFirstName() + " " + borrower.getLastName(),
                    borrower.getPhoneNumber()
                });

                this.borrowerISBNs.stream().forEach(b -> {

                    if (b.getBorrowerId() == Integer.parseInt(borrowerId)) {

                        this.defaultTableModelReturnBooks.addRow(new Object[]{
                            this.titles.get(b.getISBN()).getTitle(),
                            b.getISBN(),
                            b.getPursueDate(),
                            b.getReturnDate()
                        });
                    }
                });

                this.hidingInformationPanel(false);
            } else {

                this.hidingInformationPanel(true);
                JOptionPane.showMessageDialog(this, "Invalid borrower ID. Please try again.");
            }
        } catch (HeadlessException e) {

            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_bCheckAvailableActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancelReturn;
    private javax.swing.JButton bCheckAvailable;
    private javax.swing.JButton bFinalizeReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pReturnBooksPanel;
    private javax.swing.JPanel pStudentInfoPanel;
    private javax.swing.JTable tblReturnBooks;
    private javax.swing.JTable tblStudentInfo;
    private javax.swing.JTextField tfStudentID;
    // End of variables declaration//GEN-END:variables
}
